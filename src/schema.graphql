"""
A product that, we'll go for mobile phones
"""
type Product {
	id: ID!
	name: String!
	price: Float!
	color: Color!
	features: [Feature] @relation(name: "HAS_FEATURE", direction: "OUT")
	category: Category @relation(name: "BELONGS_TO", direction: "OUT")
	similar(first: Int = 3, offset: Int = 0): [Product]
		@cypher(
			statement: """
			MATCH (this)-[:HAS_FEATURE]->(f:Feature)<-[:HAS_FEATURE]-(p:Product)
			WHERE p.price > (this.price / 1.3)
			WITH p as product, count(*) AS relevancy, p.released as released, collect(distinct f.value) as features
			RETURN product
			ORDER BY relevancy DESC LIMIT 5
			"""
		)
}

"""
Relevant colours for a product
"""
type Color {
	name: String!
}

"""
A product feature
"""
type Feature {
	key: ID!
	value: String!
	products: [Product] @relation(name: "HAS_FEATURE", direction: "IN")
}

"""
Categories
"""
type Category {
	id: ID!
	name: String!
	products: [Product] @relation(name: "HAS_PRODUCT", direction: "IN")
}

"""
Custom queries
"""
type Query {
	searchProducts(name: String): [Product]
		@cypher(
			statement: """
			WITH '(?i).*' + {name} + '.*' as regex
			MATCH (p:Product)
			WHERE p.name =~ regex
			RETURN p
			"""
		)
}
